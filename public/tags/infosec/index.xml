<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Infosec on Florence Njeri</title>
    <link>/tags/infosec/</link>
    <description>Recent content in Infosec on Florence Njeri</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 18 May 2022 09:36:41 +0000</lastBuildDate><atom:link href="/tags/infosec/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rails Excessive Data Exposure</title>
      <link>/posts/rails_excessive_data_exposure/</link>
      <pubDate>Wed, 18 May 2022 09:36:41 +0000</pubDate>
      
      <guid>/posts/rails_excessive_data_exposure/</guid>
      <description>For software engineers, it may be easy to assume that no hacker would target our app since it isn’t big or well known. This attitude can lead to recklessness and lower measures for securing data on an app. However, it’s important to remember that data collected by an organization is very valuable. There can also be legal consequences in terms of lawsuits against the business that ensue from leakage of a user’s personally identifiable information (PII).
What Is Excessive Data Exposure? # Excessive data exposure occurs when an API response returns more data than the client needs. As a rule of thumb, if a client application needs three fields, for example, you shouldn’t return the whole object.</description>
    </item>
    
  </channel>
</rss>
